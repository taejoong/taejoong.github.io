<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Taejoong (Tijay) Chung</title>
    <link>https://taejoong.github.io/</link>
    <description>Recent content on Taejoong (Tijay) Chung</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 01 Jun 2030 13:00:00 +0000</lastBuildDate>
    
	    <atom:link href="https://taejoong.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://taejoong.github.io/pubs/</link>
      <pubDate>Sun, 07 Apr 2019 00:00:00 -0400</pubDate>
      
      <guid>https://taejoong.github.io/pubs/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
    
&lt;div class=&#34;&#34;&gt;
  &lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.12/d3.min.js&#34; type=&#34;text/javascript&#34;&gt;&lt;/script&gt;
  &lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/queue-async/1.0.7/queue.min.js&#34; type=&#34;text/javascript&#34;&gt;&lt;/script&gt;

    &lt;script src=&#34;https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js&#34;&gt;&lt;/script&gt;
    &lt;script src=&#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js&#34; integrity=&#34;sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS&#34; crossorigin=&#34;anonymous&#34;&gt;&lt;/script&gt;
    &lt;link rel=&#34;stylesheet&#34; href=&#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css&#34; integrity=&#34;sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7&#34; crossorigin=&#34;anonymous&#34;&gt;
    &lt;div class=&#34;panel-heading&#34;&gt;
      &lt;h3 class=&#34;panel-title&#34;&gt;Publications&lt;/h3&gt;
    &lt;/div&gt;
    &lt;div class=&#34;panel-body&#34; id=&#39;publication&#39;&gt;
        &lt;ul id=&#34;pubslist&#34; class=&#34;pubslist&#34;&gt;
        &lt;/ul&gt;

        

        &lt;script&gt;
        function oxford(arr) {

            for (i = 0;i &lt; arr.length; i++){
                if(arr[i] == &#34;Taejoong Chung&#34;){
                    arr[i] = &#34;&lt;span style=&#39;color:#223fbb&#39;&gt;Taejoong Chung&lt;/span&gt;&#34;
                }
            }
                return (arr.length &gt; 2 ? arr.slice(0, arr.length-1).join(&#34;, &#34;) + &#34;, and &#34; + arr[arr.length-1] : arr.join(&#34; and &#34;));
        }

        function formatnumber(d) {
         return d.toString().replace(/\B(?=(\d{3})+(?!\d))/g, &#34;,&#34;);
        }

        function formatdate(d) {
          return d.toDateString().substr(4);
        }
        var pubs_sort_key = &#34;year&#34;;
        var pubs = &#34;&#34;;

        $(document).ready(function () {
          queue()
          .defer(d3.json, &#34;../json/publication.json&#34;)
          .await(function(error, p) { 
            pubs = p; 
            renderpubs();
          });
          
          $(&#39;#pubs-sort-date&#39;).on(&#39;click&#39;, function (e) {
            pubs_sort_key = &#34;year&#34;;
            renderpubs();
          });

          $(&#39;#pubs-sort-topic&#39;).on(&#39;click&#39;, function (e) {
            pubs_sort_key = &#34;category&#34;;
            renderpubs();
          });
        });

        function renderpubs() {
          d3.select(&#34;#pubslist&#34;)
           .html(&#34;&#34;);

          var sorted = d3.nest()
            .key(function(d) { return d[pubs_sort_key];})
            .rollup(function(d) { 
               return d;
             }).entries(pubs);

          d3.select(&#34;#pubslist&#34;)
           .selectAll(&#34;li&#34;)
             .data(sorted)
           .enter().append(&#34;li&#34;)
             .attr(&#34;class&#34;, &#34;pubs-heading&#34;)
             .html(function (d) { return &#34;&lt;h4&gt;&#34; + d.key + &#34;&lt;/h4&gt;&#34;; })
             .append(&#34;ul&#34;)
             .attr(&#34;class&#34;, &#34;pubs-elementlist&#34;)
           .selectAll(&#34;li&#34;)
             .data(function (d) { return d.values; })
           .enter().append(&#34;li&#34;)
             .attr(&#34;class&#34;, &#34;pubs-element&#34;)
             .html(renderpub);
          
          d3.select(&#34;#pubslist&#34;)
            .selectAll(&#34;.pubs-heading&#34;)
            .sort(function (a,b) { return (pubs_sort_key == &#34;year&#34; ? d3.descending(a.key, b.key) : d3.ascending(a.key, b.key)); })
         }

         function renderpub(d) {
           var result = &#34;&#34;;
           var authors = oxford(d[&#34;author&#34;]);
           var bibtex = &#39;@&#39; + d[&#39;type&#39;] + &#39;\{&#39; + d[&#39;file&#39;] + &#39;,\n  author = \{&#39; + d[&#39;author&#39;].join(&#39; and &#39;) + &#39;\},\n  title = \{\{&#39; + d[&#39;title&#39;] + &#39;\}\},\n&#39;
         
           if (d[&#34;type&#34;] == &#34;inproceedings&#34;) {
             var conference_abbr = d[&#34;booktitle_short&#34;] + &#34;&#39;&#34; + d[&#34;year&#34;].substring(2,4);
             var conference = &#34;Proceedings of the &#34; + d[&#34;booktitle_long&#34;] + &#34; (&#34; + conference_abbr + &#34;)&#34;;
             var address = d[&#34;city&#34;] + &#34;, &#34; + (d[&#34;state&#34;] ? d[&#34;state&#34;] + &#34;, &#34; : &#34;&#34;) + d[&#34;country&#34;]

             result = &#34;&lt;strong&gt;&#34; + d[&#34;title&#34;] + &#34;&lt;/strong&gt;&lt;br&gt;&#34; + authors + &#34;&lt;br&gt;In &lt;i&gt;&#34; + conference + &#34;&lt;/i&gt;, &#34; + address + &#34;, &#34; + d[&#34;month&#34;] + &#34; &#34; + d[&#34;year&#34;]; 
             
             bibtex += &#34;  booktitle = {&#34; + conference + &#34;},\n  address = {&#34; + address + &#34;},\n  month = {&#34; + d[&#34;month&#34;] + &#34;},\n  year = {&#34; + d[&#34;year&#34;] + &#34;}\n}\n&#34;;

           } else if (d[&#34;type&#34;] == &#34;article&#34;) {
             result = &#34;&lt;strong&gt;&#34; + d[&#34;title&#34;] + &#34;&lt;/strong&gt;&lt;br&gt;&#34; + authors + &#34;&lt;br&gt;&lt;i&gt;&#34; + d[&#34;journal_long&#34;] + (d[&#34;journal_short&#34;] ? &#34; (&#34; + d[&#34;journal_short&#34;] + &#34;)&#34; : &#34;&#34;) + &#34;&lt;/i&gt;&#34; + (d[&#34;volume&#34;] ? &#34; &#34; + d[&#34;volume&#34;] + (d[&#34;number&#34;] ? &#34;(&#34; + d[&#34;number&#34;] + &#34;)&#34; : &#34;&#34;) : &#34;&#34;) + &#34;, &#34; + d[&#34;month&#34;] + &#34; &#34; + d[&#34;year&#34;]; 
             bibtex += &#34;  journal = {&#34; + d[&#34;journal_long&#34;] + &#34;},\n&#34; + (d[&#34;volume&#34;] ? &#34;  volume = {&#34; + d[&#34;volume&#34;] + &#34;},\n&#34; + (d[&#34;number&#34;] ? &#34;  number = {&#34; + d[&#34;number&#34;] + &#34;},\n&#34; : &#34;&#34;) : &#34;&#34;) + &#34;  month = {&#34; + d[&#34;month&#34;] + &#34;},\n  year = {&#34; + d[&#34;year&#34;] + &#34;}\n}\n&#34;;
           } else if (d[&#34;type&#34;] == &#34;incollection&#34;) {
             var editors = oxford(d[&#34;editor&#34;]);
             result = &#34;&lt;strong&gt;&#34; + d[&#34;title&#34;] + &#34;&lt;/strong&gt;&lt;br&gt;&#34; + authors + &#34;&lt;br&gt;Chapter in &lt;i&gt;&#34; + d[&#34;booktitle&#34;] + &#34;&lt;/i&gt;, &#34; + d[&#34;publisher&#34;] + &#34;, &#34; + editors + &#34;, Eds., &#34; + d[&#34;month&#34;] + &#34; &#34; + d[&#34;year&#34;]; 
             bibtex += &#34;  booktitle = {&#34; + d[&#34;booktitle&#34;] + &#34;},\n  publisher = {&#34; + d[&#34;publisher&#34;] + &#34;},\n  editor = {&#34; + d[&#34;editor&#34;].join(&#34; and &#34;) + &#34;},\n  month = {&#34; + d[&#34;month&#34;] + &#34;},\n  year = {&#34; + d[&#34;year&#34;] + &#34;}\n}\n&#34;;
           } else if (d[&#34;type&#34;] == &#34;phdthesis&#34;) {
             result = &#34;&lt;strong&gt;&#34; + d[&#34;title&#34;] + &#34;&lt;/strong&gt;&lt;br&gt;&#34; + authors + &#34;&lt;br&gt;Doctor of Philosophy Thesis, &#34; + d[&#34;school&#34;] + &#34;, &#34; + d[&#34;month&#34;] + &#34; &#34; + d[&#34;year&#34;]; 
             bibtex += &#34;  school = {&#34; + d[&#34;school&#34;] + &#34;},\n  month = {&#34; + d[&#34;month&#34;] + &#34;},\n  year = {&#34; + d[&#34;year&#34;] + &#34;}\n}\n&#34;;
           } else if (d[&#34;type&#34;] == &#34;mastersthesis&#34;) {
             result = &#34;&lt;strong&gt;&#34; + d[&#34;title&#34;] + &#34;&lt;/strong&gt;&lt;br&gt;&#34; + authors + &#34;&lt;br&gt;Master of Science Thesis, &#34; + d[&#34;school&#34;] + &#34;, &#34; + d[&#34;month&#34;] + &#34; &#34; + d[&#34;year&#34;]; 
             bibtex += &#34;  school = {&#34; + d[&#34;school&#34;] + &#34;},\n  month = {&#34; + d[&#34;month&#34;] + &#34;},\n  year = {&#34; + d[&#34;year&#34;] + &#34;}\n}\n&#34;;
           } else if (d[&#34;type&#34;] == &#34;techreport&#34;) {
             result = &#34;&lt;strong&gt;&#34; + d[&#34;title&#34;] + &#34;&lt;/strong&gt;&lt;br&gt;&#34; + authors + &#34;&lt;br&gt;&lt;i&gt;Technical Report &#34; + d[&#34;number&#34;] + &#34;&lt;/i&gt;, &#34; + d[&#34;institution&#34;] + &#34;, &#34; + d[&#34;month&#34;] + &#34; &#34; + d[&#34;year&#34;]; 
             bibtex += &#34;  institution = {&#34; + d[&#34;institution&#34;] + &#34;},\n  number = {&#34; + d[&#34;number&#34;] + &#34;},\n  month = {&#34; + d[&#34;month&#34;] + &#34;},\n  year = {&#34; + d[&#34;year&#34;] + &#34;}\n}\n&#34;;
           } else if (d[&#34;type&#34;] == &#34;misc&#34;) {
             result = &#34;&lt;strong&gt;&#34; + d[&#34;title&#34;] + &#34;&lt;/strong&gt;&lt;br&gt;&#34; + authors + &#34;&lt;br&gt;&lt;i&gt;&#34; + d[&#34;howpublished&#34;] + &#34;&lt;/i&gt;&#34;; 
             bibtex += &#34;  howpublished = {&#34; + d[&#34;howpublished&#34;] + &#34;}\n}\n&#34;;
           } else {
             result = d[&#34;type&#34;];
           }
           
           var labels = [];
           
           if (d[&#34;file&#34;]) {
             labels.push(&#34;&lt;a href=&#39;publications/&#34; + d[&#34;file&#34;] + &#34;.pdf&#34; + &#34;&#39;&gt;&lt;span class=&#39;label label-danger&#39;&gt;PDF&lt;/span&gt;&lt;/a&gt;&#34;);
           } 
           
           if (d[&#34;note&#34;]) {
             labels.push(&#34;&lt;a href=&#39;&#34; + d[&#34;note&#34;] + &#34;&#39;&gt;&lt;span class=&#39;label label-danger&#39;&gt;Link&lt;/span&gt;&lt;/a&gt;&#34;);
           }

           labels.push(&#34;&lt;span class=&#39;label label-default&#39; data-toggle=&#39;modal&#39; data-target=&#39;#bibtex-&#34; + d[&#34;file&#34;] + &#34;&#39;&gt;BibTeX&lt;/span&gt;&lt;div class=&#39;modal fade&#39; id=&#39;bibtex-&#34; + d[&#34;file&#34;] + &#34;&#39; role=&#39;dialog&#39;&gt;&lt;div class=&#39;modal-dialog&#39;&gt;&lt;div class=&#39;modal-content&#39;&gt;&lt;div class=&#39;modal-header&#39;&gt;&lt;button type=&#39;button&#39; class=&#39;close&#39; data-dismiss=&#39;modal&#39;&gt;&amp;times;&lt;/button&gt;&lt;h4 class=&#39;modal-title&#39;&gt;BibTeX&lt;/h4&gt;&lt;/div&gt;&lt;div class=&#39;modal-body&#39;&gt;&lt;pre&gt;&#34; + bibtex + &#34;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&#34;);
           
           if (d[&#34;slides&#34;]) {
             labels.push(&#34;&lt;a href=&#39;slides/&#34; + d[&#34;slides&#34;] + &#34;&#39;&gt;&lt;span class=&#39;label label-default&#39;&gt;Slides&lt;/span&gt;&lt;/a&gt;&#34;);
           } 

           if (d[&#34;dataset&#34;]) {
             labels.push(&#34;&lt;a href=&#39;&#34; + d[&#34;dataset&#34;] + &#34;&#39;&gt;&lt;span class=&#39;label label-warning&#39;&gt;Measurement Data&lt;/span&gt;&lt;/a&gt;&#34;);
           }
           
           if (d[&#34;software&#34;]) {
             labels.push(&#34;&lt;a href=&#39;&#34; + d[&#34;software&#34;] + &#34;&#39;&gt;&lt;span class=&#39;label label-primary&#39;&gt;Software&lt;/span&gt;&lt;/a&gt;&#34;);
           }

           if (d[&#34;award&#34;]) {
             labels.push(&#34;&lt;span class=&#39;label label-success&#39;&gt;&#34; + d[&#34;award&#34;] + &#34;&lt;/span&gt;&#34;);
           } 
           
           if (labels.length &gt; 0) {
             result = result + &#34;&lt;br&gt;&#34; + labels.join(&#34; &#34;);
           }
           
           return result;
         }

        &lt;/script&gt;
    &lt;/div&gt;

&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title></title>
      <link>https://taejoong.github.io/bio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://taejoong.github.io/bio/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h1 id=&#34;bio&#34;&gt;Bio&lt;/h1&gt;
&lt;h3 id=&#34;taejoong-tijay-chung-is-an-assistant-professor-at-the-computer-science-department-at-virginia-tech-before-joining-virginia-tech-he-spent-2-years-at-rit-as-an-assistant-professor-and-3-years-at-northeastern-university-as-a-postdoc-working-with-a--hrefhttpsmisloveorgprof-alan-mislovea-a-hrefhttpdavidchoffnescomdavid-choffnesa-and-a-hrefhttpcbwshchristo-wilsona-he-received-his-phd-in-computer-science-and-engineering-from-seoul-national-university-in-2015-his-work-focuses-on-internet-security-privacy-implications-and-internet-measurement-he-received-the-a-hrefhttpsirtforganrpirtf-applied-networking-research-prizea-2019-a-hrefhttpsconferencessigcommorgimc2019awardsacm-imc-distinguished-paper-awarda-2019-a-hrefhttpswwwnsfgovawardsearchshowawardawd_id1850465nsf-crii-awarda-2019-a-hrefhttpswwwusenixorgconferencesbest-papersusenix-security-distinguished-paper-awarda-2017-and-best-paper-award-at-ieee-computer-society-comsoc-seoul-chapter-2010&#34;&gt;Taejoong (Tijay) Chung is an Assistant Professor at the Computer Science department at Virginia Tech. Before joining Virginia Tech, he spent 2 years at RIT as an Assistant Professor and 3 years at Northeastern university as a postdoc working with &lt;!-- raw HTML omitted --&gt;Prof. Alan Mislove&lt;!-- raw HTML omitted --&gt;, &lt;!-- raw HTML omitted --&gt;David Choffnes&lt;!-- raw HTML omitted --&gt;, and &lt;!-- raw HTML omitted --&gt;Christo Wilson&lt;!-- raw HTML omitted --&gt;. He received his Ph.D. in Computer Science and Engineering from Seoul National University in 2015. His work focuses on Internet security, privacy implications, and Internet measurement. He received the &lt;!-- raw HTML omitted --&gt;IRTF Applied Networking Research Prize&lt;!-- raw HTML omitted --&gt; (2019), &lt;!-- raw HTML omitted --&gt;ACM IMC Distinguished Paper Award&lt;!-- raw HTML omitted --&gt; (2019), &lt;!-- raw HTML omitted --&gt;NSF CRII Award&lt;!-- raw HTML omitted --&gt; (2019), &lt;!-- raw HTML omitted --&gt;USENIX Security Distinguished Paper Award&lt;!-- raw HTML omitted --&gt; (2017), and Best Paper Award at IEEE Computer Society (ComSoc) Seoul Chapter (2010).&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://taejoong.github.io/fundings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://taejoong.github.io/fundings/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h1 id=&#34;fundings&#34;&gt;Fundings&lt;/h1&gt;
&lt;h3 id=&#34;my-research-has-been-generously-supported-by-several-sources&#34;&gt;My research has been generously supported by several sources.&lt;/h3&gt;
    
&lt;div class=&#34;&#34;&gt;
    &lt;div class=&#34;panel-body&#34; id=&#39;funding&#39;&gt;
        &lt;ul id=&#34;fundinglist&#34; class=&#34;fundinglist&#34;&gt;
        &lt;/ul&gt;

        
    
  &lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.12/d3.min.js&#34; type=&#34;text/javascript&#34;&gt;&lt;/script&gt;
  &lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/queue-async/1.0.7/queue.min.js&#34; type=&#34;text/javascript&#34;&gt;&lt;/script&gt;

    &lt;script src=&#34;https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js&#34;&gt;&lt;/script&gt;
    &lt;script src=&#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js&#34; integrity=&#34;sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS&#34; crossorigin=&#34;anonymous&#34;&gt;&lt;/script&gt;
    &lt;link rel=&#34;stylesheet&#34; href=&#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css&#34; integrity=&#34;sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7&#34; crossorigin=&#34;anonymous&#34;&gt;

    &lt;script&gt;
    function oxford(arr) {

        for (i = 0;i &lt; arr.length; i++){
            if(arr[i] == &#34;Taejoong Chung&#34;){
                arr[i] = &#34;&lt;span style=&#39;color:#223fbb&#39;&gt;Taejoong Chung&lt;/span&gt;&#34;
            }
        }
            return (arr.length &gt; 2 ? arr.slice(0, arr.length-1).join(&#34;, &#34;) + &#34;, and &#34; + arr[arr.length-1] : arr.join(&#34; and &#34;));
    }
    function formatnumber(d) {
     return d.toString().replace(/\B(?=(\d{3})+(?!\d))/g, &#34;,&#34;);
    }

    function formatdate(d) {
      return d.toDateString().substr(4);
    }

    var funding_sort_key = &#34;agency&#34;;
    var funding = &#34;&#34;;

    $(document).ready(function () {
      queue()
      .defer(d3.json, &#34;json/fundings.json&#34;)
      .await(function(error, p) {
        funding = p;
        funding.forEach(function (d) { d[&#34;year&#34;] = d[&#34;start&#34;].substring(3,7);});
        renderfundings();
      });

      $(&#39;#funding-sort-date&#39;).on(&#39;click&#39;, function (e) {
        funding_sort_key = &#34;year&#34;;
        renderfundings();
      });

      $(&#39;#funding-sort-funder&#39;).on(&#39;click&#39;, function (e) {
        funding_sort_key = &#34;agency&#34;;
        renderfundings();
      });

      $(&#39;#funding-sort-type&#39;).on(&#39;click&#39;, function (e) {
        funding_sort_key = &#34;type&#34;;
        renderfundings();
      });
    });

    function renderfundings() {
      d3.select(&#34;#fundinglist&#34;)
       .html(&#34;&#34;);

      var sorted = d3.nest()
        .key(function(d) { return d[funding_sort_key];})
        .rollup(function(d) {
           return d;
         }).entries(funding);

      d3.select(&#34;#fundinglist&#34;)
       .selectAll(&#34;li&#34;)
         .data(sorted)
       .enter().append(&#34;li&#34;)
         .attr(&#34;class&#34;, &#34;pubs-heading&#34;)
         .html(function (d) { return &#34;&lt;h4&gt;&#34; + d.key + &#34;&lt;/h4&gt;&#34;; })
         .append(&#34;ul&#34;)
         .attr(&#34;class&#34;, &#34;pubs-elementlist&#34;)
       .selectAll(&#34;li&#34;)
         .data(function (d) { return d.values; })
       .enter().append(&#34;li&#34;)
         .attr(&#34;class&#34;, &#34;pubs-element&#34;)
         .html(renderfunding);

      d3.select(&#34;#fundinglist&#34;)
        .selectAll(&#34;.pubs-heading&#34;)
        .sort(function (a,b) { return (funding_sort_key == &#34;year&#34; ? d3.descending(a.key, b.key) : d3.ascending(a.key, b.key)); })
     }

     function renderfunding(d) {
       var result = &#34;&#34;;

       if (funding_sort_key != &#34;agency&#34;) { result = d[&#34;agency&#34;] + &#34;. &#34;; }

       result += (d[&#34;link&#34;] ? &#34;&lt;a href=&#39;&#34; + d[&#34;link&#34;] + &#34;&#39;&gt;&#34; : &#34;&#34;) + &#34;&lt;i&gt;&#34; + d[&#34;title&#34;] + &#34;&lt;/i&gt;&#34; + (d[&#34;link&#34;] ? &#34;&lt;/a&gt;&#34; : &#34;&#34;) + &#34;, &#34; + (d[&#34;number&#34;] ? d[&#34;number&#34;] + &#34;, &#34; : &#34;&#34;) + d[&#34;start&#34;] + (d[&#34;end&#34;] ? &#34;&amp;ndash;&#34; + d[&#34;end&#34;] : &#34;&#34;) + &#34;. &#34; + d[&#34;role&#34;];
       if (d[&#34;pis&#34;]) {
          result += &#34;, joint with &#34; + oxford(d[&#34;pis&#34;]);
       }

       result += &#34;. &#34; + (d[&#34;currency&#34;] ? d[&#34;currency&#34;] : &#34;$&#34;) + formatnumber(d[&#34;amount&#34;]);

       if (d[&#34;amount_total&#34;]) {
         result += &#34; (VT), &#34; + (d[&#34;currency&#34;] ? d[&#34;currency&#34;] : &#34;$&#34;) + formatnumber(d[&#34;amount_total&#34;]) + &#34; (total)&#34;;
       }

       result += &#34;.&#34;;

       if (! d[&#34;hide&#34;])
         return result;
     }
  &lt;/script&gt;
    &lt;/div&gt;

&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>Recent &amp; Upcoming Talks</title>
      <link>https://taejoong.github.io/talk/</link>
      <pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate>
      
      <guid>https://taejoong.github.io/talk/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Posts</title>
      <link>https://taejoong.github.io/post/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://taejoong.github.io/post/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>https://taejoong.github.io/slides/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://taejoong.github.io/slides/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://taejoong.github.io/project/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://taejoong.github.io/project/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://taejoong.github.io/courses/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://taejoong.github.io/courses/</guid>
      <description>&lt;h1 id=&#34;courses&#34;&gt;Courses&lt;/h1&gt;
&lt;h4 id=&#34;cs-4264-principles-of-computer-security-spring-2021-at-vt&#34;&gt;CS 4264 (Principles of Computer Security) Spring 2021 at VT&lt;/h4&gt;
&lt;p&gt;CS4264 is designed to teach some of the fundamental topics and design principles in modern computer security. This includes security design principles for software systems; Cryptographic models and methods; Threats and defenses in computer operating systems, software, networks, web applications; Privacy, and data protection.&lt;/p&gt;
&lt;h4 id=&#34;cs-6204-public-key-infrastructure-and-network-security-fall-2020-at-vt-spring-2019-2020-at-ritcs6204&#34;&gt;&lt;a href=&#34;./cs6204&#34;&gt;CS 6204 (Public Key Infrastructure and Network Security) Fall 2020 at VT, Spring 2019, 2020 at RIT&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;A public key infrastructure (PKI) provides secure communications between two different entities over an untrusted network. Due to this ability, PKIs are now central to security on the Internet: there are a number of large-scale PKIs in use today such as DNSSEC, HTTPS, and the RPKI. This course examines basic network security models and public key infrastructure that entwines multiple layers of the network stack: application, transport, and network layer. Topics include concepts in basic threat models in networking, public key infrastructure, data-driven approach for securing Internet, etc. Students are required to write critiques on assigned papers, propose and complete a research project individually or in teams, and give presentations on a related topic. This course instance belongs to the Distributed Systems cluster and Security cluster.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;csci-351-data-communication-and-networks-fall-2018-2019-at-rit&#34;&gt;CSCI-351 (Data Communication and Networks) Fall 2018, 2019 at RIT&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;This course is an in-depth study of data communications and networks. The course covers design of, and algorithms and protocols used in, the physical, data link, network, transport, and application layers in the Internet; methods for modeling and analyzing networks and an introduction to network security. Programming projects will be required.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
